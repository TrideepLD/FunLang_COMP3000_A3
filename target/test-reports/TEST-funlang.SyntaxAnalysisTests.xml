<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="MSI" name="funlang.SyntaxAnalysisTests" tests="24" errors="0" failures="0" skipped="0" time="0.053" timestamp="2020-11-03T15:12:30">
                     <properties>
      <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/><property name="java.specification.version" value="11"/><property name="sun.cpu.isalist" value="amd64"/><property name="sun.jnu.encoding" value="Cp1252"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="sun.boot.library.path" value="C:\Users\tride\Downloads\jdk-11\bin"/><property name="sun.java.command" value="xsbt.boot.Boot test"/><property name="jdk.debug" value="release"/><property name="sun.stderr.encoding" value="cp437"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2018-09-25"/><property name="java.home" value="C:\Users\tride\Downloads\jdk-11"/><property name="file.separator" value="\"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="sun.stdout.encoding" value="cp437"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="user.script" value=""/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="11+28"/><property name="user.name" value="tride"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="java.vendor.version" value="18.9"/><property name="java.io.tmpdir" value="C:\Users\tride\AppData\Local\Temp\"/><property name="java.version" value="11"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/><property name="sun.os.patch.level" value=""/><property name="java.library.path" value="C:\Users\tride\Downloads\jdk-11\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Users\tride\Downloads\jdk-11\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\tride\Downloads\sbt\bin;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\Program Files (x86)\sbt\bin;C:\Program Files (x86)\scala\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Users\tride\Downloads\jdk-11\bin;C:\Users\tride\Downloads\jdk-11\bin;C:\Users\tride\AppData\Local\Microsoft\WindowsApps;C:\Users\tride\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\tride\AppData\Local\GitHubDesktop\bin;C:\Users\tride\AppData\Roaming\npm;;."/><property name="java.vendor" value="Oracle Corporation"/><property name="scala.ext.dirs" value="C:\Users\tride\.sbt\0.13\java9-rt-ext-oracle_corporation_11"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.desktop" value="windows"/><property name="java.class.path" value="C:\Program Files (x86)\sbt\\bin\sbt-launch.jar"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="user.variant" value=""/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Australia/Sydney"/><property name="os.name" value="Windows 10"/><property name="java.vm.specification.version" value="11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="MY"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="C:\Users\tride"/><property name="user.language" value="en"/><property name="swoval.tmpdir" value="C:\Users\tride\.sbt\1.0"/><property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="path.separator" value=";"/><property name="os.version" value="10.0"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="java.vendor.url.bug" value="http://bugreport.java.com/bugreport/"/><property name="user.dir" value="D:\newStudyFolder\Semester_4\Programming Languages(COMP3000)\Ass\ASS3"/><property name="os.arch" value="amd64"/><property name="java.vm.info" value="mixed mode"/><property name="java.vm.version" value="11+28"/><property name="java.class.version" value="55.0"/>
    </properties>
                     <testcase classname="funlang.SyntaxAnalysisTests" name="parsing an identifier of one letter produces the correct tree" time="0.014">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an identifier as an identifier produces the correct tree" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an identifier containing digits and underscores produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an integer as an identifier gives an error" time="0.019">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a non-identifier as an identifier gives an error (digit)" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a non-identifier as an identifier gives an error (underscore)" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a keyword as an identifier gives an error" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a keyword prefix as an identifier produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an integer of one digit as an integer produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an integer as an integer produces the correct tree" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a non-integer as an integer gives an error" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an equal expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a less than expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an addition expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a subtraction expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a multiplication expression produces the correct tree" time="0.002">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a division expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an integer expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a true expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a false expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an identifier expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a parenthesized expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an application expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an if expression produces the correct tree" time="0.001">
                                                 
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>